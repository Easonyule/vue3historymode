# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "tag"

  tag:
    runs-on: ubuntu-latest

    outputs:
      new_tag: ${{ steps.github-tag-action.outputs.new_tag }}
      changelog: ${{ steps.github-tag-action.outputs.changelog }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump and tag
        id: github-tag-action
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: .*
          default_bump: minor

  release:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - uses: actions/checkout@v3

      - run: npm install
      - run: npm run build
      - name: Pin4everland
        id: pin4everland
        uses: 4everland/pin-action@v1.3
        with:
          EVER_TOKEN: ${{secrets.EVER_TOKEN}}
          # EVER_PROJECT_ID: ${{secrets.EVER_PROJECT_ID}}
          EVER_PROJECT_NAME: "vue-test-IPFS"
          EVER_PROJECT_PLAT: "IPFS"
          BUILD_LOCATION: "./dist"
      # - name: echo ipfs
      #   run: echo ${{ steps.pin4everland.outputs.uri }}

      - name: Release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.new_tag }}
          release_name: Release ${{ needs.tag.outputs.new_tag }}
          body: |
            IPFS hash of the deployment:
            4everland only provider CIDv1
            - CIDv1: `${{ steps.pin4everland.outputs.uri }}`
            this is test form ipfs
            IPFS gateways:
            - ${{ steps.pin4everland.outputs.uri }}
            ${{ needs.tag.outputs.changelog }}
